// <auto-generated />
using System;
using LMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMS.Data.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20250826130706_SeedInitialData1")]
    partial class SeedInitialData1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMS.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<decimal>("Fees")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 8, 26, 13, 7, 6, 282, DateTimeKind.Utc).AddTicks(263),
                            Description = "Introduction to C# and .NET",
                            Duration = 10,
                            Fees = 499.99m,
                            InstructorId = 2,
                            ModifiedDate = new DateTime(2025, 8, 26, 13, 7, 6, 282, DateTimeKind.Utc).AddTicks(264),
                            Title = "C# Basics"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 8, 26, 13, 7, 6, 282, DateTimeKind.Utc).AddTicks(772),
                            Description = "Building Web APIs with ASP.NET Core",
                            Duration = 15,
                            Fees = 699.99m,
                            InstructorId = 2,
                            ModifiedDate = new DateTime(2025, 8, 26, 13, 7, 6, 282, DateTimeKind.Utc).AddTicks(772),
                            Title = "ASP.NET Core"
                        });
                });

            modelBuilder.Entity("LMS.Models.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompletionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompletionStatus = "InProgress",
                            CourseId = 1,
                            EnrollmentDate = new DateTime(2025, 8, 26, 13, 7, 6, 282, DateTimeKind.Utc).AddTicks(1066),
                            Grade = "B",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("LMS.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "System Administrator",
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Course Instructor",
                            RoleName = "Instructor"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Enrolled Student",
                            RoleName = "Student"
                        });
                });

            modelBuilder.Entity("LMS.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 30,
                            ContactNumber = "111-111-1111",
                            CreatedDate = new DateTime(2025, 8, 26, 13, 7, 6, 281, DateTimeKind.Utc).AddTicks(8710),
                            Email = "admin@lms.com",
                            FirstName = "Alice",
                            Gender = "Female",
                            IsActive = true,
                            LastName = "Admin",
                            ModifiedDate = new DateTime(2025, 8, 26, 13, 7, 6, 281, DateTimeKind.Utc).AddTicks(8712),
                            PasswordHash = "hashed-admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Age = 35,
                            ContactNumber = "222-222-2222",
                            CreatedDate = new DateTime(2025, 8, 26, 13, 7, 6, 281, DateTimeKind.Utc).AddTicks(9538),
                            Email = "instructor@lms.com",
                            FirstName = "Bob",
                            Gender = "Male",
                            IsActive = true,
                            LastName = "Instructor",
                            ModifiedDate = new DateTime(2025, 8, 26, 13, 7, 6, 281, DateTimeKind.Utc).AddTicks(9538),
                            PasswordHash = "hashed-instructor",
                            UserName = "instructor"
                        },
                        new
                        {
                            Id = 3,
                            Age = 20,
                            ContactNumber = "333-333-3333",
                            CreatedDate = new DateTime(2025, 8, 26, 13, 7, 6, 281, DateTimeKind.Utc).AddTicks(9540),
                            Email = "student@lms.com",
                            FirstName = "Charlie",
                            Gender = "Other",
                            IsActive = true,
                            LastName = "Student",
                            ModifiedDate = new DateTime(2025, 8, 26, 13, 7, 6, 281, DateTimeKind.Utc).AddTicks(9540),
                            PasswordHash = "hashed-student",
                            UserName = "student"
                        });
                });

            modelBuilder.Entity("LMS.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1,
                            AssignedDate = new DateTime(2025, 8, 26, 13, 7, 6, 281, DateTimeKind.Utc).AddTicks(9914)
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2,
                            AssignedDate = new DateTime(2025, 8, 26, 13, 7, 6, 282, DateTimeKind.Utc).AddTicks(57)
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3,
                            AssignedDate = new DateTime(2025, 8, 26, 13, 7, 6, 282, DateTimeKind.Utc).AddTicks(58)
                        });
                });

            modelBuilder.Entity("LMS.Models.Course", b =>
                {
                    b.HasOne("LMS.Models.User", "Instructor")
                        .WithMany("CoursesTaught")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("LMS.Models.Enrollment", b =>
                {
                    b.HasOne("LMS.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMS.Models.User", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LMS.Models.UserRole", b =>
                {
                    b.HasOne("LMS.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMS.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMS.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("LMS.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("LMS.Models.User", b =>
                {
                    b.Navigation("CoursesTaught");

                    b.Navigation("Enrollments");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
